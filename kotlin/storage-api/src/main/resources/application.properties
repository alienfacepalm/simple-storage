#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.DefaultNamingStrategy
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.DefaultComponentSafeNamingStrategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImp
spring.datasource.server=${DATABASE_SERVER:localhost}
spring.datasource.port=${DATABASE_PORT:5432}
spring.datasource.dbname=${DBNAME:artifact_storage}
spring.datasource.dbschema=${DBSCHEMA:fs}
spring.datasource.url=jdbc:postgresql://${spring.datasource.server}:${spring.datasource.port}/${spring.datasource.dbname}?currentSchema=${spring.datasource.dbschema}
spring.datasource.username=${DATABASE_USER:postgres}
spring.datasource.password=${DATABASE_PASSWORD:postgres}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.platform=POSTGRESQL
spring.datasource.max-active=20
spring.datasource.tomcat.max-wait=10000
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.tomcat.max-active=30
server.tomcat.max-connections=1000
server.tomcat.max-threads=400
# following type corresponds to org.springframework.batch.support.DatabaseType
spring.database.type=POSTGRESQL
#
security.jwtSecret=${JWT_SECRET:00000000-0000-0000-0000-000000000000}
security.jwtAlgorithm=${JWT_ALGORITHM:HS512}
#
s3.bucket=${S3_BUCKET:}
s3.prefix=${S3_PREFIX:}
s3.region=${S3_REGION:}
s3.endpoint=${S3_ENDPOINT:}
s3.expirationMinutes=${S3_EXPIRE_MINUTES:1000}
s3.accessKeyId=${AWS_ACCESS_KEY_ID:}
s3.secretAccessKey=${AWS_SECRET_ACCESS_KEY:}
#
#max file and request size 
spring.http.multipart.max-file-size=20MB
spring.http.multipart.max-request-size=25MB
#
# Enable response compression
server.compression.enabled=true
# The comma-separated list of mime types that should be compressed
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
#,application/octet-stream
# Compress the response only if the response size is at least 1KB
server.compression.min-response-size=1024
# Enable HTTP/2 support, if the current environment supports it
server.http2.enabled=true
# Maximum time the response should be cached (in seconds) 
spring.resources.cache.cachecontrol.max-age=120
# The cache must re-validate stale resources with the server. Any expired resources must not be used without re-validating.
spring.resources.cache.cachecontrol.must-revalidate=true
# The resources are private and intended for a single user. They must not be stored by a shared cache (e.g CDN).
#spring.resources.cache.cachecontrol.cache-private= # set a boolean value true/false
# The resources are public and any cache may store the response.
#spring.resources.cache.cachecontrol.cache-public= # set a boolean value true/false
